Id,PostTypeId,AcceptedAnswerId,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate,ContentLicense
"40519002","1","","","2016-11-10 02:17:25","","0","813","<p>Given my App will download files from a server and I only want <strong>1 download to be progressed at the same time</strong>, then how could this be done with <code>RxAlamofire</code>? I might simply be missing an Rx operator.
Here's the rough code:</p>

<pre><code>Observable
    .from(paths)
    .flatMapWithIndex({ (ip, idx) -&gt; Observable&lt;(Int, Video)&gt; in
        let v = self.files![ip.row] as! Video
        return Observable.from([(idx, v)])
    })
    .flatMap { (item) -&gt; Observable&lt;Video&gt; in
        let req = URLRequest(url: item.1.downloadURL())

        return Api.alamofireManager()
            .rx
            .download(req, to: { (url, response) -&gt; (destinationURL: URL, options: DownloadRequest.DownloadOptions) in
              ...
            })
            .flatMap({ $0.rx.progress() })
            .flatMap { (progress) -&gt; Observable&lt;Float&gt; in
              // Update a progress bar
              ...
            }
            // Only propagate finished items
            .filter { $0 &gt;= 1.0 } 
            // Return the item itself
            .flatMap { _ in Observable.from([item.1]) }
    }
    .subscribe(
      onNext: { (res) in
        ...
      },
      onError: { (error) in
        ...
      },
      onCompleted: {
        ...
      }
    )
</code></pre>

<p>My problem is <strong>a)</strong> RxAlamofire will download multiple items at the same time and <strong>b)</strong> the (progress) block is called multiple times for those various items (with different progress infos on each, causing the UI to behave a bit weird).</p>

<p><strong>How to ensure the downloads are done one by one instead of simultaneously?</strong></p>
","375209","","375209","","2016-11-14 07:45:27","2016-11-15 15:47:40","Limiting simultaneous downloads using RxAlamofire","<alamofire><rx-swift><rxalamofire>","1","2","","","","CC BY-SA 3.0"
"40894016","1","","","2016-11-30 16:57:57","","3","679","<p>I have an array of images.</p>

<pre><code>let images:[UIImage]
</code></pre>

<p>I want to upload images to the server, after uploading each image I will get the URL of the image as a response. </p>

<p>How to organize a uploading chain(loop) and get all responses using RxAlamofire?</p>

<p>P.S. I did not find examples of uploading multipart data to the server using RxAlamofire</p>
","5485334","","","","","2016-11-30 16:57:57","Uploading file with parameters using RxAlamofire","<ios><swift><rx-swift><rxalamofire>","0","1","","","","CC BY-SA 3.0"
"41174527","1","","","2016-12-15 22:41:23","","0","513","<p>I am trying to use RxAlamofire with <code>retry()</code> but I can't make it work. I tried to add <code>retry()</code> block to different positions but it doesn't make any difference. </p>

<p>If I add <code>retry(3)</code> to end of  <code>apiClient.get(type: .posts).retry(3)</code> it seems to work. Is there a way to add retry logic to <code>ApiClient</code> class? Thanks.</p>

<pre><code>class ApiClient {
    var baseURL:String

    init(baseURL:String) {
        self.baseURL = baseURL
    }

    func get(type:ApiType) -&gt; Observable&lt;[Post]&gt;{
        return RxAlamofire
            .request(.get, baseURL + ""/someurl"") //doesn't exist
            .flatMap {
            $0.validate(statusCode: 200..&lt;300)
            .rx.json()
            }.retry(3)
            .map{(data) -&gt; [Post] in
                var posts = [Post]()
                // parse it
                return posts
        }
    }
}
    let apiClient = ApiClient(baseURL: ""https://jsonplaceholder.typicode.com"")
    apiClient.get(type: .posts)
        .subscribe(onNext:  { [weak self] posts in
            self?.objects = posts
            self?.tableView.reloadData()

            }, onError: { error in
                print(error)

        }).addDisposableTo(disposablebag)
</code></pre>
","4170419","","","","","2016-12-15 22:41:23","RxAlamofire retry doesnt work","<swift><rx-swift><rxalamofire>","0","4","","","","CC BY-SA 3.0"
"41360676","1","","","2016-12-28 11:02:58","","2","2290","<p><em>How to send Multipart data with RxAlamofire</em></p>

<blockquote>
  <p>For instance in <a href=""https://github.com/Alamofire/"" rel=""nofollow noreferrer"">Alamofire</a></p>
</blockquote>

<pre><code>let URL = try! URLRequest(url: ""http://example.com"", method: .post)


Alamofire.upload(multipartFormData: { formData in
    // multiaprt
}, with: URL, encodingCompletion: {(result: SessionManager.MultipartFormDataEncodingResult) in

})
</code></pre>

<ol>
<li><strong>How to get same behaviour/function with <a href=""https://github.com/RxSwiftCommunity/RxAlamofire"" rel=""nofollow noreferrer"">RxAlamofire</a>?</strong></li>
<li><strong>Or An way of wrapping this function in an Observable?</strong></li>
</ol>
","3600738","","3600738","","2017-01-19 11:09:29","2017-01-19 19:30:48","RxAlamofire post multipart data","<swift3><alamofire><reactive-programming><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 3.0"
"42271750","1","49315858","","2017-02-16 10:49:56","","1","688","<p>I'm trying to implement an alamofire call with max retries. Code is below:</p>

<pre><code>RxAlamofire.request(.post, URL, parameters: parameters, encoding: JSONEncoding.default)
    .observeOn(MainScheduler.instance)
    .retryWhen { (errors: Observable&lt;Error&gt;) in
        return errors.flatMapWithIndex { (e, a) -&gt; Observable&lt;Int64&gt; in
            if a &gt;= self.RETRY_COUNT - 1 {
                return Observable.error(e)
            }
            print(""Error: delay server call retry by \(a+1) second(s)"")
            return Observable&lt;Int64&gt;.timer(RxTimeInterval(a+1), scheduler: MainScheduler.instance)
        }
    }
    .subscribe(
        onNext: {
            (result) in

            print(""I get here when retrying..."")
        },
        onError: { (error) in
            print(error)
        }
    )
    .addDisposableTo(self.disposeBag)
</code></pre>

<p>Unfortunately, on retrying, I get into the onNext block in subscribe - I don't want to get there until I have a result. (The onError gives an error after max retries is exceeded as expected). Please can someone help?</p>
","2138979","","2138979","","2017-08-09 15:27:07","2018-03-16 08:11:36","RxAlamofire: retryWhen drops into subscribe block","<ios><swift><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 3.0"
"42846206","1","","","2017-03-16 22:52:35","","1","377","<p>I'm learning RxAlamofire and I faced following issue: in this snippet fragment of code from onNext, onError and onCompleted doesn't get invoked, as if the subscription wasn't working at all. To compare, piece of code with normal Alamofire works just fine.</p>

<pre><code>private func test() {
    let disposeBag = DisposeBag()

    Observable.from([""1"", ""2"", ""3""])
        .subscribe(onNext: {
            print(""\($0) lol"")
        })
        .disposed(by: disposeBag)

    let observable: Observable&lt;(HTTPURLResponse,Any)&gt; =
        RxAlamofire.requestJSON(.get, ""https://api.fixer.io/latest?base=EUR&amp;symbols=USD"")
        .debug()

    observable
        .subscribe(
            onNext: { [weak self] (r, json) in
                print(json)
            }, onError: {
                print($0)
        })
        .addDisposableTo(disposeBag)

    Alamofire.request(""https://api.fixer.io/latest?base=EUR&amp;symbols=USD"")
        .responseJSON {
            print($0)
        }
}
</code></pre>
","5010978","","","","","2017-03-16 22:52:35","RxAlamofire - Subscription not working","<ios><iphone><swift><alamofire><rxalamofire>","0","2","","","","CC BY-SA 3.0"
"43236896","1","","","2017-04-05 16:35:42","","0","317","<p>I'm using RxAlamorefire to handle network task in my app.</p>

<p>My problem is: When I make a request and it return json. If json has a key ""error"" I need emit error notification instead of onNext notification.</p>

<p>My code is like this one:</p>

<pre><code>let observable = RxAlamofire.json(.get, url, parameters: nil, encoding: URLEncoding.default, headers: header)
.map { (json) -&gt; SomeObject? in
//Should check json maybe not in "".map"" to see if the json contain ""error"" then emit onError notification.
return Mapper&lt;SomeObject&gt;().map(JSONObject: json)
}
</code></pre>
","3806992","","1173513","","2017-04-06 07:27:23","2017-04-06 07:33:45","How to emit error when get json with key","<rx-swift><rxalamofire>","1","0","","","","CC BY-SA 3.0"
"43236932","1","","","2017-04-05 16:37:46","","2","1377","<p>I'm trying to work with <code>RxAlamofire</code> to wrap a network request result.</p>

<p>My objective is to fire request, handle JSON response and create and Observable that contain either network operation success or any error occur.</p>

<p>In other place I can call the function that create the Observable and subscribe to it and notify user whether it is success or failure with error message.</p>

<p>My implementation is below:</p>

<pre><code>func discoverMovieList(for url: String, withPagg page: Int) -&gt; Observable&lt;Any&gt; {
        let requestUrl = ""\(url)&amp;page=\(page)""

        return RxAlamofire.json(.get, requestUrl)
            .map{ jsonResponse in
                    self.createOrUpdateMoviesList(from: JSON(jsonResponse))
                }
    }
</code></pre>

<p>How can we correct the code and how we call it from other place to notify the result of the process?</p>
","5532616","","472495","","2018-08-04 21:01:59","2018-08-04 21:01:59","Using RxAlamofire to create Observable contain the result of network request","<ios><rx-swift><rxalamofire>","1","2","","","","CC BY-SA 4.0"
"43494697","1","","","2017-04-19 11:39:25","","4","336","<p>I'm using <code>RxAlamofire</code> to create my <code>observable</code>. I have build the <code>URLRequest</code>. normally with <code>Alamofire</code> we can use like <code>Alamofire.request(urlRequest)</code> but seem with <code>RxAlamofire</code> I can not use <code>RxAlamofire.requet(urlRequest)</code> </p>

<p>Here is my function</p>

<pre><code>func createOrUpdateItem(for id: NSNumber) -&gt; Observable&lt;Item&gt; {

        let testRequest = Router.top.urlRequest

        let test = RxAlamofire.request(testRequest)

    }
</code></pre>

<p>Here is the error 
<a href=""https://i.stack.imgur.com/2Tq9a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2Tq9a.png"" alt=""enter image description here""></a></p>

<p>Seem like <code>RxAlamofire</code> only accept parameter which are <code>URL</code> and <code>URLConvertible</code> . The strange thing is i look through RxAlamofire there are 2 method which accept both <code>URLConvertible</code> and <code>URLRequestConvertible</code>. Anyone has same same issue and how to resolve? I'm asking this because my app use <code>Alamofire Router</code> which is an enum adopt to <code>URLRequestConvertible</code>.</p>

<pre><code>    /**
         Creates an observable of the `Request`.

         - parameter method: Alamofire method object
         - parameter url: An object adopting `URLConvertible`
         - parameter parameters: A dictionary containing all necessary options
         - parameter encoding: The kind of encoding used to process parameters
         - parameter header: A dictionary containing all the addional headers

         - returns: An observable of the `Request`
         */
    public func request(_ method: Alamofire.HTTPMethod, _ url: URLConvertible, parameters: [String : Any]? = default, encoding: ParameterEncoding = default, headers: [String : String]? = default) -&gt; RxSwift.Observable&lt;Alamofire.DataRequest&gt;

    /**
         Creates an observable of the `Request`.

         - parameter URLRequest: An object adopting `URLRequestConvertible`
         - parameter parameters: A dictionary containing all necessary options
         - parameter encoding: The kind of encoding used to process parameters
         - parameter header: A dictionary containing all the addional headers

         - returns: An observable of the `Request`
         */
    public func request(urlRequest: URLRequestConvertible) -&gt; RxSwift.Observable&lt;Alamofire.DataRequest&gt;
</code></pre>
","5532616","","472495","","2018-10-10 12:28:31","2018-10-10 12:28:31","RxAlamofire cannot use with URLRequest","<ios><alamofire><urlrequest><rxalamofire>","0","0","","","","CC BY-SA 4.0"
"44317905","1","44318736","","2017-06-01 22:13:02","","0","1017","<p>This is my non-reactive code that works just fine.</p>

<p>func getLatestHtml2 () {</p>

<pre><code>Alamofire.request(""https://www.everfest.com/fest300"").responseString { response in
    print(""\(response.result.isSuccess)"")
    if let html = response.result.value {
        self.parseHTML(html: html)
    }
}
</code></pre>

<p>}</p>

<p>However when I make it reactive using this code. </p>

<pre><code>  func getLatestHtml1() -&gt; Observable&lt;String&gt; {

        return Observable&lt;String&gt;.create { (observer) -&gt; Disposable in
            let request = Alamofire
                .request(""https://www.everfest.com/fest300"")
                .responseString { response in
                    print(response.result.value)
                    observer.onNext(response.result.value!)
                    observer.onCompleted()

            }
            return Disposables.create { request.cancel() }


        }
    }
</code></pre>

<p>I get no data in the print statement. I even used RxAlamofire, which I feel is the right way with this code and it has error checking:</p>

<pre><code>func getLatestHtml() -&gt; Observable&lt;String?&gt; {
        return RxAlamofire

            .requestData(.get,""https://web.archive.org/web/20170429080421/https://www.everfest.com/fest300"" )
            .debug()
            .catchError { error in
                print(error)
                return Observable.never()
            }
            .map { (response, value) in
                print(response.statusCode)
                guard response.statusCode == 200 else { return nil }
                print(value)
                return String(data: value, encoding: String.Encoding.utf8)
            }
            .asObservable()



    }
</code></pre>

<p>which produced no data or errors anywhere. I need to know if my syntax is wrong or my thinking regarding reactive programming is wrong.</p>

<p>I cam calling it as .getLatestHTMLX(). Thanks !</p>
","6052993","","","","","2017-06-01 23:48:34","RXAlamofire not returning data ( error or not)","<swift><reactive-programming><rx-swift><frp><rxalamofire>","1","0","","","","CC BY-SA 3.0"
"45551049","1","46508277","","2017-08-07 15:53:28","","0","145","<p>When I try to compile the code below, I get an error: </p>

<blockquote>
  <p>Ambiguous reference to member 'json(<em>:</em>:parameters:encoding:headers:)'</p>
</blockquote>

<p>The code was copied and pasted from a RxAlamofire Github repository page</p>

<pre><code>import RxSwift
import RxAlamofire

class CurrencyRest {

        static func getJson() {

            let stringURL = ""https://api.fixer.io/latest""

            // MARK: NSURLSession simple and fast
            let session = URLSession.init()

            _ = session.rx.json(.get, stringURL)
                .observeOn(MainScheduler.instance)
                .subscribe { print($0) }
        }

}
</code></pre>
","1180728","","","","","2017-10-01 01:05:53","RxAlamofire: Ambiguous reference to member 'json(_:_:parameters:encoding:headers:)'","<rxalamofire>","1","0","","","","CC BY-SA 3.0"
"46119798","1","","","2017-09-08 15:23:25","","0","141","<p>How can we get response body from DataRequest object? I am using RxAlomafire.request method for making http calls. Need some data from response body when http request fails.</p>
","8580842","","","","","2017-09-08 15:23:25","Alomafire: getting response body from DataRequest Object during request failure","<alamofire><rxalamofire>","0","2","","","","CC BY-SA 3.0"
"46392868","1","","","2017-09-24 17:27:42","","1","1299","<p>I try to manage rxswift &amp; Alamofire to get response.<br>
These functions get response successfully when token is not expired.<br>
But when the token is expired, I don't know how to refresh token and then retry to get response using new token.<br>
What should I do to refresh token and retry?<br>
I also read Alamofire documents, and I find ""RequestAdapter"" and ""RequestRetrier"".<br>
Should I use RequestAdapter &amp; RequestRetrier in my case?<br>
But I dont know how to use them in my ""getRequestJSON"" function,<br>
or have any good idea to refresh token and retry.<br>
Thanks.<br></p>

<pre><code>func get(_ callback: @escaping (JSON) -&gt; Void) {
let url = ""http://106.xx.xxx.xxx/user""
self.getRequestJSON( .get, url: url, params: [:], callback: { json in
    callback(json)
})
}

func getRequestJSON(_ method: Alamofire.HTTPMethod, url:String, params:[String:Any] = [:], callback: @escaping (JSON) -&gt; Void) {

var headers:[String:String] = [String:String]()
if token.isEmpty == false {
    headers[""Authorization""] = ""Bearer \(token)""
}

let configuration = URLSessionConfiguration.default
configuration.httpAdditionalHeaders = SessionManager.defaultHTTPHeaders
configuration.timeoutIntervalForRequest = timeout

_ = SessionManager(configuration: configuration)
    .rx.responseJSON(method,
                     url,
                     parameters: params,
                     encoding: ((method == .get) ? URLEncoding.default : JSONEncoding.default),
                     headers: headers)
    .subscribeOn(SerialDispatchQueueScheduler.init(qos: .background))
    .subscribe(onNext: { (r, data) in

        if r.statusCode == 401 {

        //token fail 
        }            

        let json = JSON(data)

        if json[""status""].stringValue == ""successful"" {

            callback(json)
        }else {
            callback(json)
        }
    }, onError: { (error) in

        callback(JSON(error))

    })
    .addDisposableTo(ResfulAPIDisposeBag)
}
</code></pre>
","8169327","","","","","2017-09-24 17:27:42","How to refresh Api authorization token using Alamofire & rxSwift?","<ios><swift><alamofire><rx-swift><rxalamofire>","0","0","1","","","CC BY-SA 3.0"
"47746033","1","","","2017-12-11 03:29:06","","3","1212","<p>I want to cancel the previous request using RxAlamofire.<br>
But I don't know where to call the cancel function.<br>
I have a searchBar, and I call the API in function ""textdidchange"".<br>
So, I want to cancel the previous request and call the API with new parameters.<br> 
Have any suggestion to help me?<br>
Thanks.<br></p>

<pre><code>func request(_ method: Alamofire.HTTPMethod, url:String, params:[String:Any] = [:], callback: @escaping (JSON) -&gt; Void) {

    var headers:[String:String] = [String:String]()
    if token.isEmpty == false {
        headers[""Authorization""] = ""Bearer \(token)""
    }

    let configuration = URLSessionConfiguration.default
    configuration.httpAdditionalHeaders = SessionManager.defaultHTTPHeaders
    configuration.timeoutIntervalForRequest = 10.0

    _ = SessionManager(configuration: configuration)
        .rx.responseJSON(method,
                         url,
                         parameters: params,
                         encoding: ((method == .get) ? URLEncoding.default : JSONEncoding.default),
                         headers: headers)
        .subscribeOn(SerialDispatchQueueScheduler.init(qos: .background))
        .subscribe(onNext: { (r, data) in

            let json = JSON(data)

            if json[""status""].stringValue == ""success"" {

                callback(json[""responseData""])

            }else {

                callback(json)
            }
        }, onError: { (error) in

            callback(JSON(error))

        })
        .addDisposableTo(ResfulAPIDisposeBag)
}
</code></pre>
","7941494","","7941494","","2017-12-11 06:22:56","2019-02-19 09:37:35","How to cancel previous request using RxAlamofire?","<ios><swift><alamofire><rx-swift><rxalamofire>","2","5","1","","","CC BY-SA 3.0"
"47904049","1","","","2017-12-20 10:37:01","","1","542","<p>I'm using RxAlamofire for downloading file. I have something like this:</p>

<pre><code>let downloadResult = download(request, to: destination)
</code></pre>

<p>Unfortunately downloadResult observable doesn't emit next event on download completed, it only emits onCompleted. </p>

<p>I need next event when download is finished to flatMap to next request. At the moment I'm basing on progress (download progress >= 1) to emit the event I'm interested in.</p>

<p>But I feel that it's not the best solution, for now it works, however I'm afraid this aproach may fail in some situation.</p>

<p>Can you suggest something? Do I miss something in RxAlamofire download api?</p>
","3077831","","","","","2017-12-29 10:24:21","RxAlamofire - event on download completed missing","<ios><swift><alamofire><rx-swift><rxalamofire>","1","0","1","","","CC BY-SA 3.0"
"48187689","1","48198724","","2018-01-10 12:39:50","","0","1050","<p>I am using Moya with RxSwift and I am trying to set the request timeout for the network call (API Calls) using below code as suggested :</p>

<p>which is including the custom Alamofire Manager when declaring your Provider</p>

<pre><code>lazy var provider: RxMoyaProvider&lt;CAPProviderAPI&gt; = {
    return RxMoyaProvider&lt;CAPProviderAPI&gt;(endpointClosure: Utility.getEndPointClosure(forProviderType: .authorized), manager: DefaultAlamofireManager.sharedManager, plugins: [NetworkActivityPlugin(networkActivityClosure: networkActivityClosure)])
}()
</code></pre>

<p>but I am getting an error saying : Use of unresolved identifier 'networkActivityClosure'</p>
","2967827","","","","","2018-01-11 01:48:56","Set request timeout on RXMoyaProvider","<alamofire><rx-swift><moya><rxalamofire>","1","0","","","","CC BY-SA 3.0"
"49002619","1","","","2018-02-27 06:39:48","","0","940","<p>How to get response of a nested api call using RxSwift and alamofire? Here i get a response from an alamofire api cal and with that result i need to call another api call. I want to get the second api call response. Can anyone suggest me a solution to solve this. please.</p>

<pre><code>func origin() -&gt; Observable&lt;String&gt; {
return Alamofire.request(""httpbin.org/get"").rx.responseJSON() 
</code></pre>

<p>}</p>

<pre><code>func otherApiCall(with origin: String) -&gt; Observable&lt;YourType&gt; {
// Other api call using origin
return Alamofire...........
</code></pre>

<p>}</p>

<blockquote>
  <p>then</p>
</blockquote>

<pre><code>origin()
.flatMap{ origin in 
    otherApiCall(with: origin)  
}
.subscribe(onNext: { response in 

})
.disposed(by: disposeBag)
</code></pre>
","9395472","","9395472","","2018-02-27 07:16:10","2018-02-27 08:34:22","How to get response of a nested api call using RxSwift and alamofire?","<alamofire><rx-swift><rxalamofire>","1","4","","","","CC BY-SA 3.0"
"49271118","1","49273193","","2018-03-14 06:33:24","","0","1299","<p>Below is the example code of RxAlamofire network request. My problem is that I want to cancel this request whenever the View Controller is dismissed.</p>

<p>I tried to assign this request to a global variable but <code>requestJSON</code> method returns <code>Observable&lt;(HTTPURLResponse, Any)&gt;</code> type.</p>

<p>Is there a way to handle this request when the View Controller is dismissed?</p>

<pre><code>RxAlamofire.requestJSON(.get, sourceStringURL)
            .debug()
            .subscribe(onNext: { [weak self] (r, json) in
                if let dict = json as? [String: AnyObject] {
                    let valDict = dict[""rates""] as! Dictionary&lt;String, AnyObject&gt;
                    if let conversionRate = valDict[""USD""] as? Float {
                        self?.toTextField.text = formatter
                            .string(from: NSNumber(value: conversionRate * fromValue))
                    }
                }
                }, onError: { [weak self] (error) in
                    self?.displayError(error as NSError)
            })
            .disposed(by: disposeBag)
</code></pre>
","5393286","","","","","2018-03-14 16:45:45","RxAlamofire cancel network request","<ios><swift><rx-swift><rx-cocoa><rxalamofire>","2","0","","","","CC BY-SA 3.0"
"49895644","1","","","2018-04-18 09:10:24","","1","1306","<p>I'm trying to write an API layer using RxSwift and RxAlamofire. 
Here is the code for API request.</p>

<pre><code>public func _request(_ method: Alamofire.HTTPMethod, url: URLConvertible, parameters: [String : Any]? , encoding: ParameterEncoding, headers: [String : String]?, isSecondTryAfterAuth: Bool = false) -&gt; RxSwift.Observable&lt;(HTTPURLResponse, Any)&gt;
{
    return RxAlamofire
        .requestJSON(method, url, parameters: parameters, encoding: JSONEncoding.default, headers: self.appDelegateInstance.refreshToken)
        .map({ (response, json) -&gt; Observable&lt;(HTTPURLResponse, Any)&gt; in
            return Observable.just(response, json)
        })
}
</code></pre>

<p>I got an error in .map function ""Closure tuple parameter '(HTTPURLResponse, Any)' does not support destructuring"". Any idea about how to solve this?<a href=""https://i.stack.imgur.com/KpWt0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KpWt0.png"" alt=""enter image description here""></a></p>
","5662641","","","","","2018-04-18 21:04:46","Error in closure tuple parameter","<ios><swift><alamofire><rx-swift><rxalamofire>","2","0","","","","CC BY-SA 3.0"
"49939309","1","","","2018-04-20 10:15:45","","5","1479","<p>I need the response body when an error occurs in an RxAlamofire call. I've seen <a href=""https://github.com/RxSwiftCommunity/RxAlamofire/issues/29"" rel=""noreferrer"">this hack</a> but I wonder if there's a cleaner way.</p>

<p>Inspired by it, I created this <a href=""https://github.com/fmaylinch/RxAlamofire"" rel=""noreferrer"">RxAlamofire fork</a> with a similar hack. With it, errors will usually be an instance of <code>DataResponseError</code> so you can do this:</p>

<pre><code>RxAlamofire.data(method, url).subscribe(

  onError: { error in

    if let error = error as? DataResponseError&lt;Data&gt; {

      // Get response body (in this case, convert it to a String)
      if let data = error.response.data {
          let message = String(data: data, encoding: String.Encoding.utf8)
          print(""Message: \(message)"")
      }

      // Get status code
      if let statusCode = error.response.response?.statusCode {
          print(""Status code: \(statusCode)"")
      }
    }
  }
)
</code></pre>
","1121497","","","","","2018-05-01 12:35:51","RxAlamofire - how to get the response on error?","<rxalamofire>","1","0","","","","CC BY-SA 3.0"
"50015805","1","","","2018-04-25 06:52:26","","0","563","<p>I am trying to use RxAlamofire for Reactive requests. There is a method for creating <code>POST</code> request with -</p>

<pre><code>public func request(_ method: Alamofire.HTTPMethod,
    _ url: URLConvertible,
    parameters: [String: Any]? = nil,
    encoding: ParameterEncoding = URLEncoding.default,
    headers: [String: String]? = nil
)
</code></pre>

<p>But I cannot pass an Array <code>[[String : Any]]</code> to the parameters for obvious reasons. So how do I create a request with this array as parameters?</p>

<p>Being more specific, I can pass</p>

<pre><code>let student = [""firstName"":""Mayur"", ""lastName"":""Deshmukh""]
</code></pre>

<p>as a parameter because it is of type <code>[String : Any]</code></p>

<p>But I cannot pass array like</p>

<pre><code>let students = [[""firstName"":""Mayur"", ""lastName"":""Deshmukh""],
                [""firstName"":""Kaustubh"", ""lastName"":""Deshmukh""]]
</code></pre>

<p>As now the type of students is <code>[[String : Any]]</code>
So does Alamofire or RxAlamofire have any handy method for creating requests with JSON Array as parameter? Or do we have to take a harder way?</p>
","3683405","","3683405","","2018-04-26 12:29:46","2018-04-26 12:29:46","How to Post request in RxAlamofire with Array as parameters instead of Dictionary?","<swift><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 3.0"
"51942679","1","","","2018-08-21 06:19:02","","0","2538","<p>I would like to post binary data through RxAlamofire, Alamofire or even without any library but after some days of research and tries, I'm not able to do it.</p>

<p>Here you can find the POSTMAN example of the request that I am trying to reproduce is:</p>

<p><img src=""https://user-images.githubusercontent.com/23025266/44338744-3b731600-a47f-11e8-8f50-4c1ef8f91202.png"" alt=""captura de pantalla 2018-08-20 a las 13 42 36"">
<img src=""https://user-images.githubusercontent.com/23025266/44338761-44fc7e00-a47f-11e8-865f-b5294a753c55.png"" alt=""captura de pantalla 2018-08-20 a las 13 42 48""></p>

<p>Is a post method with the Authorization and Content-Type headers and the binary data attached.</p>

<p>I have tried to find some example or something related but I couldn't find a solution. I could just find multipart form data examples but with multipart form data the server doesn't work (is a external API)</p>

<p>If someone could guide me or show me some example code.</p>

<p>Here the code used for login as example and to show you something that I want to achieve:</p>

<pre><code>public class APIClient: DataSource {

    public static var shared: APIClient = APIClient()

    private init(){}

    public func login(email:String, password:String) -&gt; Observable&lt;LoginResponse&gt; {
        return RxAlamofire.requestJSON(APIRouter.login(email:email, password:password))
            .subscribeOn(MainScheduler.asyncInstance)
            .debug()
            .mapObject(type: LoginResponse.self)
    }

}
</code></pre>

<p>Here the LoginResponse object:</p>

<pre><code>public struct LoginResponse: Mappable {
    var tokenId: String?
    var userId: String?

    public init?(map: Map) {}

    public mutating func mapping(map: Map) {
        tokenId &lt;- map[""id""]
        userId &lt;- map[""userId""]
    }

}
</code></pre>

<p>And finally the APIRouter extending URLRequestConvertible:</p>

<pre><code>enum APIRouter: URLRequestConvertible {

    case login(email: String, password: String)

    private var method: HTTPMethod {
        switch self {
        case .login:
            return .post
        }
    }

    private var path: String {
        switch self {
        case .login:
            return ""users/login""
        }
    }

    private var parameters: Parameters? {
        switch self {
        case .login(let email, let password):
            return [APIConstants.LoginParameterKey.email: email, APIConstants.LoginParameterKey.password: password]
        }
    }

    private var query: [URLQueryItem]? {
        var queryItems = [URLQueryItem]()
        switch self {
        case .login:
            return nil
        }
    }

    func asURLRequest() throws -&gt; URLRequest {
        var urlComponents = URLComponents(string: APIConstants.ProductionServer.baseURL)!
        if let query = query {
            urlComponents.queryItems = query
        }

        var urlRequest = URLRequest(url: urlComponents.url!.appendingPathComponent(path))

        // HTTP Method
        urlRequest.httpMethod = method.rawValue

        urlRequest.addValue(ContentType.json.rawValue, forHTTPHeaderField: HTTPHeaderField.acceptType.rawValue)
        urlRequest.addValue(ContentType.json.rawValue, forHTTPHeaderField: HTTPHeaderField.contentType.rawValue)

            if let parameters = parameters {
                do {
                    urlRequest.httpBody = try JSONSerialization.data(withJSONObject: parameters, options: [])
                } catch {
                    throw AFError.parameterEncodingFailed(reason: .jsonEncodingFailed(error: error))
                }
            }


        return urlRequest
    }
}
</code></pre>

<p>Thank you in advance!</p>

<p><strong>EDIT To convert into RxAlamofire</strong></p>

<p>With the code below I could solve the problem and convert it into RxSwift but I would like to use RxAlamofire to obtain the same result:</p>

<pre><code>public func upload(media: Data) -&gt; Observable&lt;ContentUri&gt; {
        let headers = [
            ""content-type"": ""image/png"",
            ""authorization"": ""token header""
        ]
        return Observable&lt;ContentUri&gt;.create({observer in
            Alamofire.upload(media, to: ""\(endPoint)/api/media/upload"", headers: headers)
                .validate()
                .responseJSON { response in
                    print(response)
            }
            return Disposables.create();
        })
    }
</code></pre>
","4669063","","4669063","","2018-08-21 07:06:01","2018-08-21 07:06:01","POST binary data using swift","<swift><alamofire><rx-swift><rxalamofire>","1","2","","","","CC BY-SA 4.0"
"52311965","1","52313806","","2018-09-13 10:39:25","","3","3652","<p>I'm trying to periodically (every 10 seconds) call an API that returns a Json object of model :</p>

<pre><code>struct MyModel { 
   var messagesCount: Int?
   var likesCount: Int?
}
</code></pre>

<p>And update the UI if <code>messageCount</code> or <code>likesCount</code> value changes.
I tried the Timer solution but i find it a little bit messy and i want a cleaner solution with RxSwift and RxAlamofire.</p>

<p>Any help is highly appreciated as i'm new to Rx. </p>
","10285869","","","","","2018-09-15 09:35:37","Periodically call an API with RxSwift","<ios><swift><rx-swift><rxalamofire>","2","5","2","","","CC BY-SA 4.0"
"52656378","1","52656720","","2018-10-04 23:23:13","","0","982","<p>So I have been researching RxSwift for a couple days, and am trying to create a simple app with it. I have bound the searchController of my table to the results, which feed into the <code>cellForRowAt</code> function. How do I bind the alamofire response to each cell?
Which of these do I need to do?</p>

<ul>
<li>Use RxAlamofire to create an searchResultsArray</li>
<li>Change searchResultsArray to a <code>Variable</code> and use <code>toObservable</code>?</li>
<li>Bind <code>response</code> or <code>searchResultsArray</code> to create each cell.</li>
</ul>

<p>The function I need to use is:</p>

<pre><code>.bind(to: self.tableView.rx.items(cellIdentifier: ""cell"", cellType: UITableViewCell.self)) {  row, element, cell in
    cell.textLabel?.text = ""something""
}
</code></pre>

<p>This is my current RxSwift code:</p>

<pre><code>let disposeBag = DisposeBag()
var searchResultsArray = [[String:String]]()  
searchController.searchBar.rx.text.orEmpty.filter { text in
        text.count &gt;= 3
    }.subscribe(onNext: { text in
        searchRequest(search: text, searchType: ""t:t"") { response in
        self.searchResultsArray = response
        self.tableView.reloadData()
        }
    }).disposed(by: disposeBag)
</code></pre>

<p>This is my current cell creation function. <code>showSearchResults</code> changes when the cancel button is clicked.</p>

<pre><code>override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell {
    let cell: UITableViewCell = {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: ""cell"") else {
            return UITableViewCell(style: .subtitle, reuseIdentifier: ""cell"")
        }
        return cell
    }()
    if self.shouldShowSearchResults {
        cell.textLabel?.text = searchResultsArray[indexPath.row][""result""]!
        cell.detailTextLabel?.text = searchResultsArray[indexPath.row][""location""]!
    }

    return cell
}
</code></pre>

<p>This is my current api request:</p>

<pre><code>func searchRequest(search: String, searchType: String, completionHandler: @escaping ([[String: String]]) -&gt; ()) {
    let payload: [String: Any] = [
        ""q"": search,
        ""fq"": searchType,
        ""start"": 0
    ]

    let url = URL(string: ""https://www.athletic.net/Search.aspx/runSearch"")!
    Alamofire.request(url, method: .post, parameters: payload, encoding: JSONEncoding.default).responseJSON { response in
        let json = response.data
        do {
            var searchResults: [[String: String]] = []
            let parsedJson = JSON(json!)
            if let doc = try? Kanna.HTML(html: parsedJson[""d""][""results""].stringValue, encoding: .utf8) {
                for row in doc.css(""td:nth-child(2)"") {
                    let link = row.at_css(""a.result-title-tf"")!
                    let location = row.at_css(""a[target=_blank]"")!
                    let schoolID = link[""href""]!.components(separatedBy: ""="")[1]
                    searchResults.append([""location"": location.text!, ""result"": link.text!, ""id"":schoolID])
                }
            }
            completionHandler(searchResults)
        } catch let error {
            print(error)
        }
    }
}
</code></pre>

<p>I would like to replace the cellForRowAt with a RxSwift solution.</p>
","8761914","","","","","2018-10-05 00:31:55","Bind Alamofire request to table view using RxSwift","<swift><uitableview><rx-swift><rxalamofire>","1","0","2","","","CC BY-SA 4.0"
"53827991","1","","","2018-12-18 07:13:12","","0","124","<p>I'm working on register page. by using Alamofire ,  I'm trying to upload multiple data (image and user data ), the problem is here when I make the request, It shows to me this a message (Message = ""An error has occurred.""). I have tried many ways to solve it but did not  work. I hope some one help me 
   <a href=""https://www.photobox.co.uk/my/photo/full?photo_id=501497204413"" rel=""nofollow noreferrer"">first image of the postman</a>
<a href=""https://www.photobox.co.uk/my/photo/full?photo_id=501497210470"" rel=""nofollow noreferrer"">the result</a></p>

<pre><code> //MARK:- PARAMETERS//
    var parameters = [String: Any]()
         parameters =       [""MEM_FIRST_NAME"": firstName
                            ,""MEM_LAST_NAME"": lastName
                            ,""MEM_GENDER"": Gender
                            ,""MEM_BIRTH_DATE"": ""30/06/2015""
                            ,""MEM_NATIONALITY"": nationality
                            ,""MEM_OCCUPATION"": jobTitle
                            ,""MEM_MOBILE"": mobile
                            ,""MEM_FACEBOOK_URL"" : """"
                            ,""MEM_CITY_ID"": preferedCity
                            ,""MEM_EMAIL"": Email
                            ,""MEM_PASSWORD"": password]



//MARK:- URL
       guard let url = URL(string:""http://allonz-api.imatcheg.com/api/members/register"") else {return}
        //MARK:-HEADER
         let headers: HTTPHeaders = [""Content-type"":""multipart/form-data""]

        //MARK:- REQUEST
        Alamofire.upload(multipartFormData: { (form) in

        for (key, value) in parameters{
            form.append(""\(value)\r\n"".data(using: String.Encoding.utf8)!, withName: key as String)}
         if let data = UIImageJPEGRepresentation( photo,0.5){
            form.append(data , withName: ""image"", fileName: ""image.png"", mimeType: ""image/png"")}
        }
        , to: url , method: .post, headers: headers ) { (result) in

            switch result
            {
            case.failure(let error):
                print(""what is the problem\(error)"")
            case.success(let upload, _,_):
                upload.responseJSON(completionHandler: { respones  in
                     switch respones.result
                     {
                     case.success(let value):
                        print(value)

                     case.failure(let error):
                        print(error)
                    }
                })
            }
        }
    }
    }
</code></pre>
","","user8319594","","user8319594","2018-12-18 07:42:11","2018-12-18 07:42:11","Upload multiple data, image and user data by using Alamofire doesn't work","<ios><swift><alamofire><alamofireimage><rxalamofire>","0","5","","","","CC BY-SA 4.0"
"55128301","1","","","2019-03-12 18:20:44","","0","749","<p>I am trying to user ObjectMapper to consume JSON response. So far my response looks like this:</p>

<pre><code>{
  ""paramsStructure"": [
    {
      ""tiles"": {
        ""0"": {
          ""layout"": {
            ""column"": 0,
            ""colSpan"": ""1"",
            ""rowSpan"": ""1"",
            ""row"": 0
          },
          ""type"": ""2""
        },
        ""1"": {
          ""layout"": {
            ""column"": 1,
            ""colSpan"": ""1"",
            ""rowSpan"": ""1"",
            ""row"": 0
          },
          ""type"": ""2""
        }
      },
      ""title"": ""..."",
      ""rowCount"": ""4"",
      ""colCount"": ""2"",
      ""key"": ""..."",
      ""icon"": ""...""
    }
  ]
}
</code></pre>

<p>So far I have created StructuresObject for whole paramsStructure and nested collection of Single Structure object. Now I want to map tiles into TileStructure objects collection nested inside Structure object looking like this.</p>

<pre><code>class SingleStructure : Mappable{

    var columns: Int = 0
    var title: String = """"
    var key: String = """"
    var icon: String = """"
    var tilesStructure : [Int: TileStructure]?

    required init?(map: Map) {

    }

    func mapping(map: Map) {
        title &lt;- map[""title""]
        key &lt;- map[""key""]
        icon &lt;- map[""icon""]
        columns &lt;- (map[""colCount""], TransformOf&lt;Int, String&gt;(
            fromJSON: {item in return Int(item!)},
            toJSON: {_ in return ""$0""}))


        //need here parsing of tilesStructure
     }
}
</code></pre>

<p>I mainly I need to map this JSON tiles dictionary into [Int: TileStructure] where key is dictionary key and TileStructure is mappable object containing ""layout"" and ""type"" attributes.</p>

<p>Thank you in advance for your help :)</p>

<p>EDIT!!!</p>

<p>I tried denis_lor approach but when I run parsing data from RxAlamofire I get following exception:</p>

<pre><code>keyNotFound(CodingKeys(stringValue: ""tiles"", intValue: nil), Swift.DecodingError.Context(codingPath: [], debugDescription: ""No value associated with key CodingKeys(stringValue: \""tiles\"", intValue: nil) (\""tiles\"")."", underlyingError: nil))
</code></pre>

<p>This is how I call request</p>

<pre><code> return RxAlamofire.requestData(.get, GlobalSettings.GET_DEVICE_MAIN_STRUCTURE, parameters: parameters, headers: headers)
        .debug()

        .mapObject(type: ParamsStructure.self)
</code></pre>

<p>And thats my object mapper:</p>

<pre><code>extension ObservableType {

public func mapObject&lt;T: Codable&gt;(type: T.Type) -&gt; Observable&lt;T&gt; {
    return flatMap { data -&gt; Observable&lt;T&gt; in
        let responseTuple = data as? (HTTPURLResponse, Data)

        guard let jsonData = responseTuple?.1 else {
            throw NSError(
                domain: """",
                code: -1,
                userInfo: [NSLocalizedDescriptionKey: ""Could not decode object""]
            )
        }

        let decoder = JSONDecoder()

        let object = try decoder.decode(T.self, from: jsonData)

        return Observable.just(object)
    }
}
</code></pre>

<p>}</p>

<p>I think that the problem is maybe encoding and thats what creates those escape ""\"" what falls to keys missmatch.</p>
","9535385","","9535385","","2019-03-12 22:15:02","2019-03-13 12:51:17","ObjectMapper - map JSON dictionary as nested object","<swift><objectmapper><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"55209838","1","55221362","","2019-03-17 17:23:24","","0","147","<p>I have a function which is supposed to return an Observable. When I call the function for the first time, everything goes fine and I receive the result I expected, but for the second time that I want to make the same request with different parameters the function automatically returns the same response as before and it does not fire the requests at all. There are multiple requests nested because each new depends on the results of the previous.</p>

<p>It looks something like this:</p>

<pre><code>func request1() -&gt; Observable&lt;String&gt; {
    return RxAlamofire
            .requestString(.get, url)
            .map { (response, html) -&gt; Result&lt;String&gt; in
                .....
                return newUrl
            }
}

private func request2(credentials: Credentials) -&gt; Observable&lt;String&gt; {
   return request1()
            .flatMapLatest { (newUrl)

                return RxAlamofire
                    .requestString(.get, newUrl)
                    .flatMapLatest { (response, _) -&gt; Observable&lt;String&gt; in

                        let params = [""username"": credentials.username, ""password"": credentials.password]

                        return RxAlamofire
                            .requestString(.post, (response.url?.absoluteString)!, parameters: params)
                            .flatMapLatest { (response2,str) -&gt; Observable&lt;String&gt; in

                                ... some code formating ...

                                return RxAlamofire
                                    .requestString(.post, actionUrl!, parameters: anotherParameters)
                                    .map { return result }
                        }
                }
        }
    }
</code></pre>

<p>when I am calling it it looks something like this :</p>

<pre><code>result = someObservable.flatMapLatest { return ScrapingService.request2(credentials: $0) }
</code></pre>

<p>when I trigger ""someObservable"" it runs the request2 as expected, but the actual request is not made.</p>

<p>In the end I do onNext on the result.</p>
","11216994","","11216994","","2019-03-17 17:31:04","2019-03-18 12:25:15","RxAlamofire request is not fired for the second time i call the function","<swift><networking><rx-swift><reactive><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"55308791","1","55308954","","2019-03-22 22:53:44","","0","48","<p>I am <code>web scrapping</code> a specific website to which the user has to be logged in. It is simple to logout the user, but after the logout the site requires the user to <code>""close the browser""</code>. If the user only closes the tab and then re-enters the site, they are taken back to the signed in account. Is there a way to somehow simulate closing the browser in Swift or possibly RxAlamofire?</p>
","11216994","","","","","2019-03-22 23:23:59","Is there a way to quit browser session in Swift or RxAlamofire?","<swift><web-scraping><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"56171030","1","56173973","","2019-05-16 14:36:22","","0","169","<p>Following is method provided by <strong>RxAlamofire</strong> for making requestJSON request there is no method to pass parameters [String : String]</p>

<pre><code>RxAlamofire.requestJSON(.get, url)
        .subscribe(onNext: { [weak self] (r, json) in
            if let jsonResult = JSON(json) as? JSON {
                if let foodMenuResult = MenuResult(jsonResult) as? MenuResult {
                    self?.delegate?.showMenu(menuResult: foodMenuResult)
                }
            }

            }, onError: {  [weak self] (error) in
                self?.delegate?.onError()
            },onCompleted: {})
        .disposed(by: disposeBag)
</code></pre>

<p>How to pass parameters to <strong>RxAlamofire</strong> requestJSON method</p>
","4153589","","","","","2019-05-16 17:43:46","RxAlmofire pass parameters to requestJSON [:]","<ios><swift4><rx-swift><reactive><rxalamofire>","1","2","","","","CC BY-SA 4.0"
"56227364","1","","","2019-05-20 19:55:31","","1","243","<p>I want to make a post call using <strong>RxAlamofire</strong> it provides <strong>function</strong> <strong>requestJson</strong> which requires <strong>two parameters</strong> <strong>type get or post and url</strong> but there is <strong>no parameter to pass post json body</strong> how to do that following is my code</p>

<pre><code> var components = URLComponents(string: url)!
    components.setQueryItems(with: param)
    let url = components.url!
    print(""\(url)"")

    RxAlamofire.requestJSON(.post, url)
        .subscribe(onNext: { [weak self] (r, json) in
            if let jsonResult = JSON(json) as? JSON {
                if let cartResult = FoodCartResult(jsonResult) as? FoodCartResult {
                    self?.delegate?.showCart(cartresult: cartResult)
                }
            }

            }, onError: {  [weak self] (error) in
                print(error.localizedDescription)
                self?.delegate?.onError()
            },onCompleted: {})
        .disposed(by: disposeBag)
</code></pre>
","4153589","","","","","2019-05-31 15:55:35","How to make Post call using RxAlamofire pass json in post body","<ios><swift><swift4><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"56232506","1","56312094","","2019-05-21 06:43:24","","0","1544","<p>I want to make post call using RxAlamofire not able to find any method to do so</p>

<p>tried using requestJSON method but there is no paramter to pass post json in</p>

<pre><code> RxAlamofire.requestJSON(.post, url)
</code></pre>

<p>how to make post call and pass json data to post call in RxAlamofire</p>
","5450254","","","","","2021-05-21 20:13:28","RxAlamofire make post call with json body","<swift><swift4><rx-swift><rxalamofire>","3","3","","","","CC BY-SA 4.0"
"56235031","1","","","2019-05-21 09:15:29","","0","1053","<p>how to covert URLRequest to Alamofire URLConvertible I am getting error while trying to convert following is my code</p>

<pre><code>var request = URLRequest(url: URL(string: ""some url"")!)
request.httpBody = json
RxAlamofire.request(.post, request as! URLConvertible, parameters: param, encoding: JSONEncoding.default, headers: [""Content-Type"" : ""application/json""])
    .subscribe(onNext:{ [weak self] (json) in
        print(json)
        if let jsonResult = JSON(json) as? JSON {
            if let cartResult = FoodCartResult(jsonResult) as? FoodCartResult {
                self?.delegate?.showCart(cartresult: cartResult)
            }
        }

        }, onError: {
            [weak self] (error) in
            print(error.localizedDescription)
            self?.delegate?.onError()
        },onCompleted: {})
    .disposed(by: disposeBag)
</code></pre>

<p>code is crashing my app saying </p>

<blockquote>
  <p>Could not cast value of type 'Foundation.URLRequest' (0x10c23a3c8) to 'Alamofire.URLConvertible'</p>
</blockquote>

<p>Already referred following but not working for me
<a href=""https://stackoverflow.com/questions/41114689/could-not-cast-value-of-type-nsmutableurlrequest-0x11beb7040-to-alamofire-u"">Could not cast value of type &#39;NSMutableURLRequest&#39; (0x11beb7040) to &#39;Alamofire.URLRequestConvertible&#39; (0x11beb9040)</a></p>
","5450254","","1226963","","2019-05-21 17:57:23","2019-05-21 17:57:23","How to convert URLRequest to Alamofire.URLConvertible","<swift><rx-swift><rxalamofire>","0","2","","2019-05-21 09:17:42","","CC BY-SA 4.0"
"56916503","1","","","2019-07-06 18:05:49","","-1","46","<p>In the process of reading the RXAlamofire source code, there is a place that I don't understand very well.</p>

<p>Since this method is an observable object for creating a DataRequest, why call the responseWith method?</p>

<pre><code>func request&lt;R: RxAlamofireRequest&gt;(_ createRequest: @escaping (SessionManager) throws -&gt; R) -&gt; Observable&lt;R&gt; {
        return Observable.create { observer -&gt; Disposable in
            let request: R
            do {
                request = try createRequest(self.base)
                observer.on(.next(request))


                request.responseWith(completionHandler: { response in
                    if let error = response.error {
                        observer.on(.error(error))
                    } else {
                        observer.on(.completed)
                    }
                })

                if !self.base.startRequestsImmediately {
                    request.resume()
                }

                return Disposables.create {
                    request.cancel()
                }
            } catch {
                observer.on(.error(error))
                return Disposables.create()
            }
        }
    }
</code></pre>
","11748407","","11748407","","2019-07-06 18:16:56","2019-07-06 20:36:33","Why use the responseWith method?","<swift><rxalamofire>","1","1","0","","","CC BY-SA 4.0"
"57544950","1","57603726","","2019-08-18 13:17:26","","1","447","<pre><code>func showImageForUrl(url: String) -&gt; Observable&lt;Async&lt;Any&gt;&gt; {
    let result = RxAlamofire
        .requestJSON(.get,
                     url,
                     parameters: nil)
        .flatMap { (response, json) -&gt; Observable&lt;Any&gt; in
            return Observable.just(json)
        }.async()
    return result
}
</code></pre>

<p>url String  ""<a href=""http://1.bp.blogspot.com/-KhiJ6WYQn8Q/T7ZXxb_KHxI/AAAAAAAABvM/_l134PCuEcA/s1600/dog+photos+3.jpg"" rel=""nofollow noreferrer"">http://1.bp.blogspot.com/-KhiJ6WYQn8Q/T7ZXxb_KHxI/AAAAAAAABvM/_l134PCuEcA/s1600/dog+photos+3.jpg</a>""  </p>

<p>I'm trying this but the end result is an error.<a href=""https://i.stack.imgur.com/ET8U3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ET8U3.png"" alt=""enter image description here""></a></p>
","1898829","","","","","2019-08-22 07:03:20","How to download image using RxAlamofire","<swift><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"58294464","1","","","2019-10-08 21:44:30","","0","180","<p>I'm trying to figure out where data in an API call is coming from. Specifically, I want to know where <code>req.user</code> is coming from as from what I can tell there's no paramters being passed into the API call.</p>

<p>Here's the server-side code (in JS):</p>

<pre><code>let APIHandler = (req, res) = &gt; {
    if (req.user) {
       latitude = req.user.location.latitude
       longitude = req.user.location.longitude
    }
}
</code></pre>

<p>And here's the client-side code (in Swift):</p>

<pre><code> let strURLTo = SERVICE.BASE_URL + apiName + limit
 let headers = AuthorizationHeader.getAuthHeader(staticToken: false)

 var urlComponents = URLComponents(string: strURLTo)
 urlComponents?.queryItems = [URLQueryItem(name: ""offset"", value: String(offset)),
                             URLQueryItem(name: ""limit"", value: String(limit))]

 let strURL  = urlComponents?.url

 RxAlamofire.requestJSON(.get,strURL!,parameters:[:],headers:headers) 

            .debug()

            .subscribe(onNext: {(HeaderResponse, bodyResponse) in

                if let dict = bodyResponse as? [String: AnyObject] {
                    if let respDict: [String: Any] = JSON(dict).dictionaryObject {
                        let response = ResponseModel.init(statusCode: HeaderResponse.statusCode, response:respDict)
                        self.subject_response.onNext(response)
                    }
                }

            }, onError: { (error) in
                self.subject_response.onError(error)
            })

            .disposed(by: disposeBag)
</code></pre>

<p>And finally here's the <code>RxAlamofire.requestJson</code> definition:</p>

<pre><code>public func requestJSON(_ method: Alamofire.HTTPMethod,
    _ url: URLConvertible,
    parameters: [String: Any]? = nil,
    encoding: ParameterEncoding = URLEncoding.default,
    headers: [String: String]? = nil)
    -&gt; Observable&lt;(HTTPURLResponse, Any)&gt;
{
    return SessionManager.default.rx.responseJSON(
        method,
        url,
        parameters: parameters,
        encoding: encoding,
        headers: headers
    )
}

</code></pre>

<p>What I tried was tracing through the <code>RxAlamofire.requestJSON</code> function step-by-step but I don't see anywhere where the actual API call happens (to me it seems like it's just outlining the types it's expecting/returning). Additionally there's no parameters in the <code>RxAlamofire.requestJSON(.get,strURL!,parameters:[:],headers:headers)</code>
call.</p>
","7541810","","","","","2019-10-08 22:38:23","Where is the actual API call within this RxAlamofire source code?","<swift><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"58534173","1","","","2019-10-24 04:31:35","","1","119","<p>I am using Swift 4.2 and Xcode 10.1 And while importing  RxAlamofire to my project I am getting an error ""Could not build Objective-C module 'RxAlamofire' "".</p>

<p>I have tried to clean the build folder and build it again. And also delete the Derived data folder and build again. But still getting the same error. Any help appreciated.
<a href=""https://i.stack.imgur.com/FEqKm.png"" rel=""nofollow noreferrer"">Here is a screenshot of the error I'm getting:</a></p>

<p>Podfile</p>

<pre><code>platform :ios, '9.0'
use_frameworks!
target 'RiderUser' do
pod ""FlagPhoneNumber""
pod ""KeychainAccess""
pod ""SwiftyJSON""
pod ""RxAlamofire""
pod ""RxSwift""
end
</code></pre>
","11303300","","213269","","2021-01-03 18:23:48","2021-01-03 18:23:48","Swift compile error - Could not build Objective-C module 'RxAlamofire'","<ios><swift><xcode><cocoapods><rxalamofire>","0","0","","","","CC BY-SA 4.0"
"59680603","1","59683293","","2020-01-10 11:15:50","","1","261","<p>Following is my code to do RxAlamofire requests</p>

<pre><code> RxAlamofire.request(request as URLRequestConvertible).validate(statusCode: 200..&lt;300).responseJSON().asObservable()
        .subscribe(onNext: { [weak self] (response) in
                if let json = response.data {
                    let jsonResult = JSON(json)
                    let foodMenuResult = MenuResult(jsonResult)
                    self?.delegate?.showMenu(menuResult: foodMenuResult)

                }

            }, onError: {  [weak self] (error) in
               // print(error.localizedDescription)
                 UIViewController().logAPIError(error: error)
                self?.delegate?.onError(MenuViewController.REQUEST_MENU)
            },onCompleted: {})
        .disposed(by: disposeBag)
</code></pre>

<p>I want to write extension related to Observable so that I can handle error at one place instead of writing same code on every  onError </p>

<p><strong>How can I do this?</strong></p>
","4153589","","","","","2020-01-10 14:04:41","RxAlamofire extension to hanlde error at one place","<ios><swift><alamofire><rx-swift><rxalamofire>","1","2","","","","CC BY-SA 4.0"
"60228021","1","60228236","","2020-02-14 14:13:18","","0","2170","<p>I am trying to create function which return Observable&lt;(HTTPURLResponse, Any)> using RxAlamofire:</p>

<pre><code>func getResponse(credentialData: Credentials, ulr: String)-&gt;Observable&lt;(HTTPURLResponse, Any)&gt;{
        let credentialData = ""\(credentialData.username):\(credentialData.password)"".data(using: String.Encoding(rawValue: String.Encoding.utf8.rawValue))!
        let base64Credentials = credentialData.base64EncodedString()
        let headers = (""Authorization"", ""Basic \(base64Credentials)"")
        let header = HTTPHeaders.init(dictionaryLiteral: headers)

        return Observable.create{ observer in
            requestJSON(.get, ulr, parameters: nil, encoding: JSONEncoding.default, headers: header)
            .subscribe(onNext: { response in
                observer.onNext(response)
                } ,
        onError: { error in
            observer.onError(error)
            })
        return Disposables.create()
        }
    }    
}
</code></pre>

<p>but I get this below warning:-</p>

<blockquote>
  <p>Result of call to 'subscribe(onNext:onError:onCompleted:onDisposed:)'
  is unused</p>
</blockquote>

<p>How to fix it? After adding <code>.disposed(by: disposeBag)</code> my function isn't working.</p>
","12738240","","9863222","","2020-02-15 09:36:22","2020-02-15 09:36:22","Result of call to 'subscribe(onNext:onError:onCompleted:onDisposed:)' is unused","<swift><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"60229451","1","60229573","","2020-02-14 15:44:54","","0","49","<p>I'm trying to create a function which returns <code>Observable&lt;(HTTPURLResponse, Any)&gt;</code> using <code>RxAlamofire</code>:</p>

<pre><code>class APIManager {
    let disposeBag = DisposeBag()
    func getResponse(credentialData: Credentials, ulr: String)-&gt;Observable&lt;(HTTPURLResponse, Any)&gt;{
    let credentialData = ""\(credentialData.username):\(credentialData.password)"".data(using: String.Encoding(rawValue: String.Encoding.utf8.rawValue))!
    let base64Credentials = credentialData.base64EncodedString()
    let headers = (""Authorization"", ""Basic \(base64Credentials)"")
    let header = HTTPHeaders.init(dictionaryLiteral: headers)
    return Observable.create{ observer in
        requestJSON(.get, ulr, parameters: nil, encoding: JSONEncoding.default, headers: header)
        .subscribe(onNext: { response in
            observer.onNext(response)
            } ,


    onError: { error in
        observer.onError(error)
        },
    onCompleted: {},
    onDisposed: {}).disposed(by: self.disposeBag)
    return Disposables.create()
    }
}    
</code></pre>

<p>}</p>

<p>The code into <code>onNext</code> is not executed; it's going through <code>onDisposed</code> only. </p>

<p>How can I fix it?</p>
","12738240","","4577897","","2020-02-14 16:13:38","2020-02-14 16:13:38","Created observable doesn't emit anything","<swift><rx-swift><rxalamofire>","1","1","","","","CC BY-SA 4.0"
"63711698","1","","","2020-09-02 18:37:59","","1","64","<p>I'm trying to remove my dependency on RxAlamofire.</p>
<p>I currently have this function:</p>
<pre><code>  func requestData(_ urlRequest: URLRequestConvertible) -&gt; Observable&lt;(HTTPURLResponse, Data)&gt; {

    RxAlamofire.request(urlRequest).responseData()

  }
</code></pre>
<p>How can I refactor this and use Alamofire directly to build and return an RxSwift Observable?</p>
","699002","","","","","2020-09-02 21:47:19","Removing Swift RxAlamofire dependency","<swift><rx-swift><rxalamofire>","1","0","","","","CC BY-SA 4.0"
"64306845","1","","","2020-10-11 17:09:37","","0","108","<p>In an application that I am developing I need to make some calls to a server. For this I use RxAlamofire, but I am encountering a problem when handling timeouts.</p>
<p>The code I use to call is the following:</p>
<pre><code>    func rxSingleAuthentification&lt;T: Codable&gt;(url: URLConvertible,
                                              method: HTTPMethod,
                                              headers: HTTPHeaders,
                                              parameters: Parameters?,
                                              encoding: ParameterEncoding,
                                              model: T.Type) -&gt; Observable&lt;T?&gt;  {
        return Observable&lt;T?&gt;.create { (observer) -&gt; Disposable in
                if !NetManager.shared.isNetworkAvailable {
                    observer.onError(SystemError.noConn)
                } else if let sessionManager = RxOAuthServices.shared.sessionManager {
                    _ = sessionManager.rx.responseData(method, url, parameters: parameters, encoding: encoding, headers: headers)
                        .subscribe(onNext: { (response, data) in
                            if let json = try? JSONSerialization.jsonObject(with: data, options: []) as? [String : Any] {
                               print(json)
                            }
                        }, onError: { error in
                            observer.onError(SystemError.serverError)
                        }, onCompleted: nil, onDisposed: nil)
                        .disposed(by: RxOAuthServices.shared.disposeBag)
                } else {
                    observer.onError(SystemError.serverError)
                }
    
                return Disposables.create()
            }
    }

</code></pre>
<p>This code works fine, but when I do timeout tests it doesn't catch it, that is, it keeps thinking all the time.</p>
<p>Can someone give me a hand to be able to handle timeouts on these types of calls, so that I can display a message of 'Could not connect to server'?</p>
<p>Thank you</p>
","2796060","","","","","2020-10-11 17:09:37","Handle timeouts in RxAlamofire","<swift><xcode><timeout><rxalamofire>","0","1","","","","CC BY-SA 4.0"
"65182661","1","","","2020-12-07 13:30:44","","1","35","<p>My workflow is simple.</p>
<p>I don't need to make the same DataRequest 2 times and need to check wether this request is already in progress.
If request is not in progress I need to make the request if some specific time has passed.</p>
<p>How could I achieve something like this using Alamofire ?
I am using 'Alamofire', '5.2.2' and 'RxAlamofire', '5.6.2' .</p>
","7073962","","","","","2020-12-08 13:15:05","How to check if same DataRequest is already in progress using RxAlamofire or Alamofire 5 and up?","<swift><alamofire><rx-swift><rxalamofire>","1","1","","2020-12-10 17:21:38","","CC BY-SA 4.0"
"66740046","1","66741657","","2021-03-22 03:41:59","","0","561","<p>I'm updating my code with RxAlamofire. I updated RxAlmofire with lastest version. How can i update this code <code>config.httpAdditionalHeaders = SessionManager.defaultHTTPHeaders</code> in</p>
<pre><code>let config = URLSessionConfiguration.default
    config.httpAdditionalHeaders = SessionManager.defaultHTTPHeaders
</code></pre>
<p>I tried with <code>config.httpAdditionalHeaders = HTTPHeader.defaultUserAgent</code> but not success</p>
","11798192","","","","","2021-03-22 07:12:32","Cannot find 'SessionManager' in scope?","<ios><swift><iphone><swift5><rxalamofire>","1","2","","","","CC BY-SA 4.0"